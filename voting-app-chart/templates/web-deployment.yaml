apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.webapp.name }}
  labels:
    app: {{ .Values.webapp.appLabel }}
spec:
  replicas: {{ .Values.webapp.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.webapp.appLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.webapp.appLabel }}
    spec:
      containers:
        - name: {{ .Values.webapp.containerName }}
          image: "{{ .Values.webapp.image.repository }}:{{ .Values.webapp.image.tag }}"
          imagePullPolicy: {{ .Values.webapp.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.webapp.port }}
          env:
            - name: DB_HOST
              value: {{ .Values.webapp.db.host }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.webapp.db.secretName }}
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.webapp.db.secretName }}
                  key: POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.webapp.db.secretName }}
                  key: POSTGRES_DB
          livenessProbe:
            httpGet:
              path: {{ .Values.webapp.liveness.path }}
              port: {{ .Values.webapp.port }}
            initialDelaySeconds: {{ .Values.webapp.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.webapp.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.webapp.readiness.path }}
              port: {{ .Values.webapp.port }}
            initialDelaySeconds: {{ .Values.webapp.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.webapp.readiness.periodSeconds }}
